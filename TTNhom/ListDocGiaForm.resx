<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANsAAADmCAMAAABruQABAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAD/UExURT2znvf394LO6P///+/HXnK1zDehjqjd79ezVP76+/n4+H/N6DiynCmvmDGwmnrL56Ha
        7mewyTuumvPIXN20UM3m4e7GXt7t6u/085fW7Ony8CmgkW3CskW2one91SyeinGnfoTKvODFZKzZ0J/U
        yY/Owrfd1afQ38jj3Vm8qmjAsKnYz9fq59Ls9pbJv73g2d/u85rJ2sTf6en2+9Pt9nO5rO/EUIS/05TH
        2L3c577k8ialj1etncbo9EWnltHj4HO3iqq+fMLBcvLgtJC7hvTx6fDNc9LDa4fCt9q5YXqmd6muab6w
        X8iyWmClg+bUlOfp2enjxerYoNe/eLPLsqO82okAABDeSURBVHhe7Z1pW9tIEoARDCaSJYFJNDKOjdfj
        A2wzQEJC7syRZTYzs7uz1///LVstlaxuta4qtbGZh/fDTDhs6aWqqw+1rB3rz8uj28Pk0e1h8uj2MHl0
        e5is380B7Czim/jz9bFGN3TqhsHVeDIdjfoxo9F0Mr4Kwi464m+vgTW5CS0nvJqM5r7neT7gpogvxXfn
        o8lVKH5xTX5rcBPRCmfTuXByd8oAS8+bT2ehiCC+2iCG3US8erPRDnjh+VcDfjujWc98/Ey6gZgViHi5
        5eHScV0Rv8Axq2fOTYhBwOrHK4sP4Qssg8lpyA1S8WI6aCAW43uD6YWxtmfEzbG7s3ljsRjfm8+6ZuwM
        uDl2OHXNiMX47jQ0YdfYzbEv+l5Frafi+l7/orldQzfHDhaeWbEY11sETe0aua3NTNDcrombHfbXZiZw
        vX5o47E4sN2gNo7WaiZwvVGDmsl1c+ylb7I2FuH7S7Yczw2K4/w+zAT+nFsyWW6ONfXwyPeBN4UjMmC4
        QXUc3FfQYvwBq2LS3e45aDGs0JHd7PDeWpqMP6d3B0Q3xx4bHl/VxfVn1LykuTnW6P7zMcEbEfOS5Gb3
        NpKPCf68R8pLipsdbCgfE1w/oMgR3OzZ5vIxwZsR5Gq7OfZk82ogN6lfUeq6OfYGq4iMN6otV9PNcfqb
        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
</value>
  </data>
</root>